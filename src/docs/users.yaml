# User

components:
  requestBodies:
    nuevoUsuario:
      type: object
      properties:
        first_name:
          type: string
          description: Requerido - Nombre del usuario
        last_name:
          type: string
          description: Requerido - Apellido del usuario
        email:
          type: string
          description: Requerido - Correo del usuario, campo único
        telefono:
          type: string
          description: Requerido - Felefono del usuario
        password:
          type: string
          description: Requerido - Contraseña del usuario
        re_password:
          type: string
          descripción: Requerido - Contraseña repetida del usuario
        avatar:
          type: file
          description: Opcional - Imagen del usuario en la aplicacion, si no se envía se autogenera con una imagen por defecto
        direccion:
          type: string
          description: Requerido - Dirección del usuario que se utilizará para los envíos
      example:
        first_name: Ana
        last_name: Lopez
        email: analopez@gmail.com
        telefono: '+59899999999'
        password: '123'
        re_password: '123'
        direccion: Calle A 6655
    login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: analopez@gmail.com
        password: '123'
  errorResponses:
    registerError:
      type: object
      properties:
        status:
          type: string
        error:
          type: array
          items:
            type: string
      example:
        status: "Error"
        error: 
          - "El usuario ya se encuentra registrado"
    logoinError:
      type: object
      properties:
        status:
          type: string
        error:
          type: array
          items:
            type: string
      example:
        status: "Error"
        error: 
          - "Ya existe un usuario logueado"
    logoutError:
      type: object
      properties:
        status:
          type: string
        error:
          type: array
          items:
            type: string
      example:
        status: "Error"
        error: 
          - "Debe estar logueado"
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerada por mongo
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo del usuario, campo único
        telefono:
          type: string
          description: Felefono del usuario
        password:
          type: string
          description: Contraseña Hasheada del usuario
        role:
          type: string
          description: Rol del usuario en la aplicación
        avatar:
          type: string
          description: Imagen del usuario en la aplicacion
        carrito:
          type: ObjectId
          description: Id autogenerado por mongo para un carrito asociado al usuario
        direccion:
          type: string
          description: Dirección del usuario que se utilizará para los envíos
        createdAt:
          type: string
          description: Fecha de creación del usuario
        updatedAt: 
          type: string
          description: Fecha de ultima actualización del usuario
      example:
        _id: 639be5c3e117efc2a7aba112
        first_name: Ana
        last_name: Lopez
        email: anaplopez07@gmail.com
        telefono: "+59899999999"
        password: $2b$10$lceQksbth2V86Ox2COMp2e8.KtpR7qYsOPA5EmxbIaX8/U5bfcb4O
        role: user
        avatar: http://localhost:8080/uploads/avatar-default.png
        carrito: 639be5c3e117efc2a7aba110
        direccion: Calle Abcd 5565
        createdAt: 2022-12-16T03:28:03.606Z
        updatedAt: 2022-12-16T03:28:03.606Z
paths:
  /api/sessions/register:
    post:
      summary: Registro de usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/nuevoUsuario'
      responses:
        '200':
          description: Usuario agregado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Id autogenerado por Mongo
                      token:
                        type: string
                        description: Token generado para el usuario
                    example:
                      status: "success"
                      id: "639be5c3e117efc2a7aba112"
                      token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImZpcnN0X25hbWUiOiJhbmEiLCJsYXN0"
        '400':
          description: Fallo en la creacion de usuario
          content:
            application/json:
              schema:
                $ref: '#/components/errorResponses/registerError'
  /api/sessions/login:
    post:
      summary: Inicio de sesión
      tags:
       - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/login'
      responses:
        '200':
          description: Usuario logueado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Fallo en el login de usuario
          content:
            application/json:
              schema:
                $ref: '#/components/errorResponses/logoinError'
  /api/sessions/logout:
    get:
      summary: Cierre de sesión
      tags:
       - Users
      responses:
        '200':
          description: Finaliza la sessión correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: string
                example:
                  status: success
                  payload: Hasta luego ANA!
        '403':
          description: Error en el logout
          content:
            application/json:
              schema:
                $ref: '#/components/errorResponses/logoutError'